"use strict";(self.webpackChunkpsp_ufu=self.webpackChunkpsp_ufu||[]).push([[3724],{7213:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"sum","title":"Adder","description":"As the name suggests, adders are control elements capable of summing any number of real values.","source":"@site/docs/sum.md","sourceDirName":".","slug":"/sum","permalink":"/PSP/docs/sum","draft":false,"unlisted":false,"editUrl":"https://github.com/Thales1330/PSP/tree/master/docusaurus/docs/sum.md","tags":[],"version":"current","frontMatter":{"id":"sum","title":"Adder","sidebar_label":"Adder"},"sidebar":"docs","previous":{"title":"Transfer Function","permalink":"/PSP/docs/transferFunction"},"next":{"title":"Multiplier","permalink":"/PSP/docs/multiplier"}}');var i=t(4848),r=t(8453),o=t(6025);const d={id:"sum",title:"Adder",sidebar_label:"Adder"},a=void 0,l={},c=[{value:"Adder data edit form",id:"adder-data-edit-form",level:2}];function u(e){const n={admonition:"admonition",h2:"h2",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("link",{rel:"stylesheet",href:(0,o.Ay)("katex/katex.min.css")}),"\n",(0,i.jsx)(n.p,{children:"As the name suggests, adders are control elements capable of summing any number of real values."}),"\n",(0,i.jsx)(n.h2,{id:"adder-data-edit-form",children:"Adder data edit form"}),"\n",(0,i.jsx)(n.p,{children:"The number of inputs, as well as their signs, are defined by the user, as shown in the figure below."}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("center",{children:(0,i.jsx)("img",{src:(0,o.Ay)("images/sumForm.png"),alt:"Adder data edit form in PSP-UFU",title:"Adder data edit form in PSP-UFU"})})}),"\n",(0,i.jsxs)(n.p,{children:['In its single field "',(0,i.jsx)(n.strong,{children:"Signs"}),'", a list of signs ',(0,i.jsx)(n.strong,{children:"separated by spaces"})," is entered, containing the symbols \u201c+\u201d for a positive input and \u201c-\u201d for a negative input."]}),"\n",(0,i.jsx)(n.admonition,{title:"Information",type:"info",children:(0,i.jsx)(n.p,{children:"The user can insert two or more input signs in the block."})}),"\n",(0,i.jsx)(n.p,{children:"Once new inputs are added, corresponding nodes will be included in the graphical element of the adder, which can then be connected through connection lines."}),"\n",(0,i.jsx)(n.p,{children:"Similarly, the user may remove pre-existing input signs, which will be removed from the graphical icon by deleting the node and the line (if one is connected)."})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);