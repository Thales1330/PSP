//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: DebugFrame.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "DebugFrameBase.hpp"


// Declare the bitmap loading function
extern void wxC40F6InitBitmapResources();


namespace {
// return the wxBORDER_SIMPLE that matches the current application theme
wxBorder get_border_simple_theme_aware_bit() {
#if wxVERSION_NUMBER >= 3300 && defined(__WXMSW__)
    return wxSystemSettings::GetAppearance().IsDark() ? wxBORDER_SIMPLE : wxBORDER_STATIC;
#else
    return wxBORDER_DEFAULT;
#endif
} // DoGetBorderSimpleBit
bool bBitmapLoaded = false;
} // namespace


DebugMainFrameBase::DebugMainFrameBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC40F6InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* boxSizer129 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer129);
    
    m_richTextCtrlDebugText = new wxRichTextCtrl(this, wxID_ANY, wxT("Debug text"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxRE_CENTRE_CARET);
    
    boxSizer129->Add(m_richTextCtrlDebugText, 1, wxEXPAND, WXC_FROM_DIP(5));
    
    SetName(wxT("DebugMainFrameBase"));
    SetSize(wxDLG_UNIT(this, wxSize(500,300)));
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
}

DebugMainFrameBase::~DebugMainFrameBase()
{
}
