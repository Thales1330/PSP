//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: DataReport.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _PSP_PROJECT_DATAREPORT_BASE_CLASSES_H
#define _PSP_PROJECT_DATAREPORT_BASE_CLASSES_H

#include <wx/artprov.h>
#include <wx/button.h>
#include <wx/dialog.h>
#include <wx/frame.h>
#include <wx/grid.h>
#include <wx/iconbndl.h>
#include <wx/imaglist.h>
#include <wx/notebook.h>
#include <wx/panel.h>
#include <wx/settings.h>
#include <wx/sizer.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/xrc/xmlres.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

class DataReportBase : public wxFrame
{
   protected:
    wxNotebook* m_notebookDataReport;
    wxPanel* m_panelPowerFlowData;
    wxNotebook* m_notebookPowerFlow;
    wxPanel* m_panelPowerFlow;
    wxGrid* m_gridPowerFlow;
    wxPanel* m_panelPFBuses;
    wxGrid* m_gridPFBuses;
    wxPanel* m_panelPFBranches;
    wxGrid* m_gridPFBranches;
    wxPanel* m_panelFaultData;
    wxNotebook* m_notebookFault;
    wxPanel* m_panelFault;
    wxGrid* m_gridFault;
    wxPanel* m_panelFaultBuses;
    wxGrid* m_gridFaultBuses;
    wxPanel* m_panelFaultBranches;
    wxGrid* m_gridFaultBranches;
    wxPanel* m_panelFaultGenerators;
    wxGrid* m_gridFaultGenerators;

   protected:
    virtual void OnPowerFlowGridChanged(wxGridEvent& event) { event.Skip(); }
    virtual void OnGridPFKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnPFBusGridChanged(wxGridEvent& event) { event.Skip(); }
    virtual void OnGridPFBusesKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnPFBranchesGridChanged(wxGridEvent& event) { event.Skip(); }
    virtual void OnGridPFBranchesKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnFaulrGridChanged(wxGridEvent& event) { event.Skip(); }
    virtual void OnGridFaultKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnFaultBusesGridChanged(wxGridEvent& event) { event.Skip(); }
    virtual void OnGridFaultBusesKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnFaultBranchesGridChanged(wxGridEvent& event) { event.Skip(); }
    virtual void OnGridFaultBranchesKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnFaultGeneratorsGridChanged(wxGridEvent& event) { event.Skip(); }
    virtual void OnGridFaultGeneratorsKeyDown(wxKeyEvent& event) { event.Skip(); }

   public:
    wxGrid* GetGridPowerFlow() { return m_gridPowerFlow; }
    wxPanel* GetPanelPowerFlow() { return m_panelPowerFlow; }
    wxGrid* GetGridPFBuses() { return m_gridPFBuses; }
    wxPanel* GetPanelPFBuses() { return m_panelPFBuses; }
    wxGrid* GetGridPFBranches() { return m_gridPFBranches; }
    wxPanel* GetPanelPFBranches() { return m_panelPFBranches; }
    wxNotebook* GetNotebookPowerFlow() { return m_notebookPowerFlow; }
    wxPanel* GetPanelPowerFlowData() { return m_panelPowerFlowData; }
    wxGrid* GetGridFault() { return m_gridFault; }
    wxPanel* GetPanelFault() { return m_panelFault; }
    wxGrid* GetGridFaultBuses() { return m_gridFaultBuses; }
    wxPanel* GetPanelFaultBuses() { return m_panelFaultBuses; }
    wxGrid* GetGridFaultBranches() { return m_gridFaultBranches; }
    wxPanel* GetPanelFaultBranches() { return m_panelFaultBranches; }
    wxGrid* GetGridFaultGenerators() { return m_gridFaultGenerators; }
    wxPanel* GetPanelFaultGenerators() { return m_panelFaultGenerators; }
    wxNotebook* GetNotebookFault() { return m_notebookFault; }
    wxPanel* GetPanelFaultData() { return m_panelFaultData; }
    wxNotebook* GetNotebookDataReport() { return m_notebookDataReport; }
    DataReportBase(wxWindow* parent,
                   wxWindowID id = wxID_ANY,
                   const wxString& title = _("Data report"),
                   const wxPoint& pos = wxDefaultPosition,
                   const wxSize& size = wxSize(-1, -1),
                   long style = wxDEFAULT_FRAME_STYLE);
    virtual ~DataReportBase();
};

class StabilityEventListBase : public wxDialog
{
   protected:
    wxGrid* m_gridStabEventList;
    wxButton* m_buttonOK;

   protected:
    virtual void OnOKButtonClick(wxCommandEvent& event) { event.Skip(); }

   public:
    wxGrid* GetGridStabEventList() { return m_gridStabEventList; }
    wxButton* GetButtonOK() { return m_buttonOK; }
    StabilityEventListBase(wxWindow* parent,
                           wxWindowID id = wxID_ANY,
                           const wxString& title = _("Stability event list"),
                           const wxPoint& pos = wxDefaultPosition,
                           const wxSize& size = wxSize(500, 300),
                           long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~StabilityEventListBase();
};

#endif
